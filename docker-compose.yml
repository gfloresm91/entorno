version: "3.7"

services:

  # Databases section
  mysql:
    build: 
      context: ./bin/mysql
    container_name: 'mysql'
    restart: 'always'
    ports:
      - ${MYSQL_PORT-3306}:3306
    volumes: 
      - ${MYSQL_DATA_DIR-./data/mysql}:/var/lib/mysql
      - ${MYSQL_LOG_DIR-./logs/mysql}:/var/log/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD-secret}
      MYSQL_DATABASE: ${MYSQL_DATABASE-newdb}
      MYSQL_USER: ${MYSQL_USER-user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD-secret}
  mssql:
    image: microsoft/mssql-server-linux
    container_name: 'mssql'
    ports:
      - ${MSSQL_PORT-1433}:1433
    volumes: 
      - ${MSSQL_DATA_DIR-./data/mssql}:/var/opt/mssql
      - ${MSSQL_LOG_DIR-./logs/mssql}:/var/opt/mssql/log
    environment:
      SA_PASSWORD: ${MSSQL_PASSWORD-Yourpassword123}
      ACCEPT_EULA: "Y"
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: 'phpmyadmin'
    depends_on:
      - mysql
    ports:
      - ${PMA_WEB_PORT-8080}:80
    environment:
      PMA_HOST: mysql
      PMA_PORT: ${PMA_PORT-3306}
    volumes: 
      - /sessions
  redis:
    image: redis:latest
    container_name: 'redis'
    ports:
      - ${REDIS_PORT-6379}:6379

  # Web section
  webserver:
    build: 
      context: ./bin/webserver
      args:
       USER: ${USER-newuser}
       TZ: ${USER-America/Santiago}
    container_name: 'webserver'
    tty: true
    restart: 'always'
    depends_on: 
      - mysql
      - mssql
    ports:
      - 80:80
      - 443:443
    volumes: 
      - ${DOCUMENT_ROOT-./www}:/var/www/html
      - ${PHP_INI-./config/php/php.ini}:/etc/php/7.2/apache2/php.ini
      - ${APACHE_DIR_CONF-./config/apache/dir.conf}:/etc/apache2/mods-enabled/dir.conf
      - ${VHOSTS_DIR-./config/vhosts}:/etc/apache2/sites-enabled
      - ${APACHE_LOG_DIR-./logs/apache2}:/var/log/apache2

      # Change this section to 
      # ./config/letsencrypt:/etc/letsencrypt
      # if you prefer
      - letsencrypt_dir:/etc/letsencrypt
      - letsencrypt_lib_dir:/var/lib/letsencrypt
  openproject:
    image: openproject/community
    container_name: 'openproject'
    depends_on:
      - mysql
    ports:
      - ${OP_PORT-4001}:80
    environment:
      EMAIL_DELIVERY_METHOD: ${EMAIL_DELIVERY_METHOD-Yourpassword123}
      SMTP_ADDRESS: ${SMTP_ADDRESS-smtp.example.net}
      SMTP_PORT: ${SMTP_PORT-587}
      SMTP_DOMAIN: ${SMTP_DOMAIN-example.net}
      SMTP_AUTHENTICATION: ${SMTP_AUTHENTICATION-plain}
      SMTP_USER_NAME: ${SMTP_USER_NAME-user}
      SMTP_PASSWORD: ${SMTP_PASSWORD-password}
      SMTP_ENABLE_STARTTLS_AUTO: ${SMTP_ENABLE_STARTTLS_AUTO-true}
      
      # Important: verify user privilegies of ${MYSQL_USER}
      DATABASE_URL: 'mysql2://${MYSQL_USER-user}:${MYSQL_PASSWORD-secret}@mysql:3306/${OP_DB_NAME-databasename}'
    volumes:
      - op_postgresql_data:/var/lib/postgresql/9.6/main
      - ${OP_LOG_DIR-./logs/openproject}:/var/log/supervisor
  gitlab:
    image: gitlab/gitlab-ce:latest
    container_name: 'gitlab'
    restart: 'always'
    hostname: ${GL_HOSTNAME-gitlab.test}
    ports:
      - ${GL_WEB_PORT-4002}:80
      - ${GL_SSH_PORT-22}:22
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        external_url 'https://${GL_HOSTNAME-gitlab.test}'
    volumes:
      - gl_config_dir:/etc/gitlab
      - ${GL_LOGS_DIR-./logs/gitlab}:/var/log/gitlab
      - gl_data_dir:/var/opt/gitlab
  nextcloud:
    image: nextcloud
    container_name: 'nextcloud'
    restart: always
    ports:
      - ${NC_PORT-4003}:80
    depends_on:
      - mysql
    volumes:
      # Same what letsencrypt section, change this section if you prefer
      # to directory folder
      - nc_data_dir:/var/www/html/data
      - ${NC_CONFIG_DIR-./config/nextcloud}:/var/www/html/config
      - nc_apps_dir:/var/www/html/apps

  # (╯'□')╯︵ ┻━┻ fuck this shit
  # This is the better option what i found for multiple instances of dotnet ;(
  dotnetcore.app1:
    build:
      context: ./bin/dotnetcore
      dockerfile: app1
      args:
       NETCORE_APP1_DIR_NAME: ${NETCORE_APP1_DIR_NAME-app1_dir_name}
       NETCORE_APP1_DLL_NAME: ${NETCORE_APP1_DLL_NAME-app1.dll}
    container_name: 'dotnetcore.app1'
    depends_on:
      # - mssql
      - mysql
    ports:
      - ${NETCORE_APP1_PORT-5000}:5000
    volumes:
      - ${NETCORE_ROOT_DIR-./www/netcore}:/source
  # Uncomment this code for second app, repeat the code for others apps
  # dotnetcore.app2:
  #   build:
  #     context: ./bin/dotnetcore 
  #     dockerfile: app2
  #     args:
  #       NETCORE_APP2_DIR_NAME: ${NETCORE_APP2_DIR_NAME-app2_dir_name}
  #       NETCORE_APP2_DLL_NAME: ${NETCORE_APP2_DLL_NAME-app2.dll}
  #   container_name: 'dotnetcore.app2'
  #   depends_on:
  #     - mssql
  #     - mysql
  #   ports:
  #     - ${NETCORE_APP2_PORT-5001}:5001
  #   volumes:
  #     - ${NETCORE_ROOT_DIR-./www/netcore}:/source
    
# Storage section
volumes:
  op_postgresql_data:
  gl_data_dir:
  gl_config_dir:
  nc_data_dir:
  nc_apps_dir:
  letsencrypt_dir:
  letsencrypt_lib_dir: